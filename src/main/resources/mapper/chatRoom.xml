<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.ChatRoomRepository"> 

	<insert id= "insert" useGeneratedKeys="true" keyProperty="chatRoomId">
		INSERT INTO tb_chat_room(created_at)
		values(now());
	</insert>
	
	<update id="updateByChatRoomId">
		UPDATE tb_chat_room SET chat_room_id = #{chatRoomId}
		WHERE chat_room_id = #{chatRoomId};
	</update>
	
	<delete id="deleteByChatRoomId">
		DELETE FROM tb_chat_room WHERE chat_room_id = #{chatRoomId};
	</delete>
	
	<select id="findByChatRoomId" resultType = "com.tencoding.ADayOfLearning.repository.model.ChatRoom">
		SELECT * FROM tb_chat_room WHERE chat_room_id = #{chatRoomId};
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.ChatRoom">
		SELECT * FROM tb_chat_room;
	</select>
	
	<!-- 입장 되어 있는 채팅방 목록 조회 -->
	<select id="findByUserId" resultType = "com.tencoding.ADayOfLearning.dto.response.ChatRoomResponseDto">
		SELECT a.chat_room_id, b.user_id, a.created_at, c.username
			 , sum(CASE WHEN d.view_at = 1 THEN 1 ELSE 0 END) as view_count
		  FROM ( SELECT chat_room_id, user_id, created_at, start_at
					  FROM tb_chat_room_user 
					 WHERE start_at IS NOT NULL
					   AND user_id = #{userId}) AS a
		  JOIN tb_chat_room_user AS b
			ON a.chat_room_id = b.chat_room_id
		   AND b.user_id != a.user_id
		  JOIN tb_user AS c
			ON b.user_id = c.user_id
		  LEFT JOIN tb_chat AS d
		    ON a.chat_room_id = d.chat_room_id
		   AND b.user_id = d.user_id
		   AND a.start_at &lt;= d.created_at
		 GROUP BY a.chat_room_id, b.user_id, a.created_at, c.username
		 ORDER BY a.created_at ASC;
	</select>
	
	<!-- 해당 채팅방에 입장 되어 있는지 조회 -->
	<select id="findCheckChatRoomByUserId" resultType = "int">
		SELECT CASE WHEN a.chat_room_id IS NOT NULL THEN a.chat_room_id ELSE 0 END AS chat_room_id
		  FROM ( SELECT a.chat_room_id, count(a.chat_room_id) as count
				   FROM tb_chat_room as a
				   LEFT JOIN tb_chat_room_user as b
					 ON a.chat_room_id = b.chat_room_id
				  WHERE b.user_id IN (#{userId1}, #{userId2})
				  GROUP BY a.chat_room_id) as a
		 RIGHT JOIN ( SELECT '' ) AS b
			ON a.count = 2;
	</select>
	
</mapper>