<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.LectureSessionRepository"> 

	<insert id= "insert">
		INSERT INTO tb_lecture_session(lecture_id,session_date,created_at)
		values(#{lectureId},#{sessionDate},now());
	</insert>
	
	<update id="updateByLectureSessionId">
		UPDATE tb_lecture_session SET session_date = #{sessionDate}
		WHERE lecture_session_id = #{lectureSessionId};
	</update>
	
	<delete id="deleteByLectureSessionId">
		DELETE FROM tb_lecture_session WHERE lecture_session_id = #{lectureSessionId};
	</delete>
	
	<select id="findByLectureSessionId" resultType = "com.tencoding.ADayOfLearning.repository.model.LectureSession">
		SELECT * FROM tb_lecture_session WHERE lecture_session_id = #{lectureSessionId};
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.LectureSession">
		SELECT * FROM tb_lecture_session;
	</select>
	
	<select id="findByLectureIdAndDate" resultType = "com.tencoding.ADayOfLearning.dto.response.LectureSessionResponseDto">
		SELECT ls.lecture_session_id, ls.lecture_id, ls.session_date, ls.created_at
			 , count(p.payment_id) as students
		     , sum(CASE WHEN (r.user_id = #{userId} AND p.payment_id IS NOT NULL) THEN 1 ELSE 0 END) AS my_reserve
		  FROM ( SELECT lecture_session_id, lecture_id, session_date, created_at
					FROM tb_lecture_session
				   WHERE lecture_id = #{lectureId}
					 AND session_date BETWEEN #{date} AND DATE_ADD(#{date}, INTERVAL 1 DAY) ) ls
		  LEFT JOIN tb_reserve r
		    ON ls.lecture_session_id = r.lecture_session_id
		  LEFT JOIN tb_payment p
		    ON r.reserve_id = p.reserve_id
		   AND p.state = '결제 완료'
		 GROUP BY ls.lecture_session_id, ls.lecture_id, ls.session_date, ls.created_at;
	</select>

	
</mapper>