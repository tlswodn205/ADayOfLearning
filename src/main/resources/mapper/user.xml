<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.UserRepository"> 

	<insert id= "insert">
		INSERT INTO tb_user(username, password, identity, created_at)
		values(#{username},#{password},#{identity},now());
		<selectKey resultType="int" keyProperty="userId" order="AFTER"> <!-- 입력후 reserveId를 리턴함 -->
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateByUserId">
		UPDATE tb_user SET username = #{username},identity = #{identity},
		password = #{password}
		WHERE user_id = #{userId};
	</update>
	
	<update id="agreeBusiness">
		UPDATE tb_user SET identity = "business"
		WHERE user_id = #{userId};
	</update>
	
	<delete id="deleteByUserId">
		DELETE FROM tb_user WHERE user_id = #{userId};
	</delete>
	
	<delete id="deleteCustomerByUserId">
		UPDATE tb_user SET identity = "deletedCustomer" WHERE user_id = #{userId};
	</delete>
	
	<delete id="deleteBusinessByUserId">
		UPDATE tb_user SET identity = "deletedBusiness" WHERE user_id = #{userId};
	</delete>
	
	<select id="findByUserId" resultType = "com.tencoding.ADayOfLearning.repository.model.User">
		SELECT * FROM tb_user WHERE user_id = #{userId};
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.User">
		SELECT * FROM tb_user;
	</select>
	
	<select id="findByUsername" resultType = "com.tencoding.ADayOfLearning.repository.model.User">
		SELECT * FROM tb_user WHERE username = #{username};
	</select>	
	
	<select id="findUserDataByUserId" resultType = "com.tencoding.ADayOfLearning.dto.response.BusinessMainUserDataResponseDto">
		SELECT u.username, p.email, p.phone_number, b.business_registration_number 
		FROM tb_user u 
		LEFT JOIN tb_person p ON u.user_id = p.user_id 
		LEFT JOIN tb_business b ON u.user_id = b.user_id 
		WHERE u.user_id = #{userId};
	</select>
	
	<select id="findUsernameByEmail" resultType = "String">
		SELECT u.username FROM tb_user u LEFT JOIN tb_person p on u.user_id = p.user_id WHERE p.email = #{email};
	</select>	
	
	<update id="updatePasswordByUsername">
		UPDATE tb_user SET password = #{password}
		WHERE username = #{username};
	</update>
	
		
	<update id="updatePasswordByUserId">
		UPDATE tb_user SET password = #{password}
		WHERE user_id = #{userId};
	</update>
	
	<select id="findCustomer" resultType = "com.tencoding.ADayOfLearning.dto.response.AdminMainCustomerResponseDto">
		SELECT u.user_id, IF(substr(username,length(username)-5)='_kakao', '카카오 로그인', username ) as username, p.name, p.email, p.phone_number 
		FROM tb_user u LEFT JOIN tb_person p on u.user_id = p.user_id 
		WHERE identity = "customer"
		ORDER BY u.created_at DESC
        limit 0,5;
    </select>		
		
	<select id="findBusiness" resultType = "com.tencoding.ADayOfLearning.dto.response.AdminMainBusinessResponseDto">
		SELECT b.user_id, b.Business_name, b.Business_number, b.business_registration_number 
		FROM tb_user u LEFT JOIN tb_business b on u.user_id = b.user_id
		WHERE identity = "business"
		ORDER BY u.created_at DESC
        limit 0,5;
	</select>	
	
	<select  id="findCustomerPaging" resultType = "com.tencoding.ADayOfLearning.dto.response.PagingResponseDto">
		SELECT totalCount, totalPage, currentPage,	
				CASE
					WHEN currentPage = 1
					THEN 1
					ELSE 0 
				END AS isFirst,
			   CASE
					WHEN currentPage = totalPage
					THEN 1
					ELSE 0 
				END AS isLast
			FROM(
				SELECT count(*) totalCount, ceil(count(*)/10) totalPage,#{page} currentPage, 0 isFirst, 0 isLast
				FROM tb_person p
				LEFT JOIN tb_user u 
			    ON p.user_id = u.user_id
				WHERE 1=1 AND u.identity = 'customer'
				<if test="type == 'personName' and keyword != null">
					and p.person_name like CONCAT('%',#{keyword},'%') 
				</if>
			) ost;
	</select>
	
	<select id="findCustomerList" resultType = "com.tencoding.ADayOfLearning.dto.response.AdminCustomerResponseDto">
		SELECT IF(substr(username,length(username)-5)='_kakao', '카카오 로그인', username ) as username, p.*
		FROM tb_person p
		LEFT JOIN tb_user u 
	    ON p.user_id = u.user_id
		WHERE 1=1 AND u.identity = 'customer'
			<if test="type == 'personName' and keyword != null">
				and p.person_name like CONCAT('%',#{keyword},'%') 
			</if>
		ORDER BY created_at DESC
		LIMIT #{startNum}, 10;
	</select>
	
	<select id="findCustomerByUserId" resultType = "com.tencoding.ADayOfLearning.dto.response.AdminCustomerResponseDto">
		SELECT u.username, p.*
		FROM tb_person p
		LEFT JOIN tb_user u 
	    ON p.user_id = u.user_id
		WHERE u.user_id=#{userId} AND u.identity = 'customer'
	</select>
	
	
	<select id="customerChartData" resultType="com.tencoding.ADayOfLearning.dto.response.ChartResponseDto">
		WITH seven_days AS (
		    SELECT CURDATE() - INTERVAL days.num DAY AS day
		    FROM (SELECT 0 AS num UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) AS days
		)
		SELECT a.day AS period,
		       count(pm.username) AS period_total
		  FROM seven_days a
		  LEFT JOIN (SELECT u.created_at, u.username
					  FROM tb_user u
					  LEFT JOIN tb_business b ON b.user_id = u.user_id
					  WHERE u.identity = 'customer') AS pm ON DATE_FORMAT(pm.created_at, "%Y-%m-%d") = a.day
		 GROUP BY a.period
		 ORDER BY a.period;
	</select>
	
		
	<select id="businessChartData" resultType="com.tencoding.ADayOfLearning.dto.response.ChartResponseDto">
		WITH seven_days AS (
		    SELECT CURDATE() - INTERVAL days.num DAY AS day
		    FROM (SELECT 0 AS num UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) AS days
		)
		SELECT a.day AS period,
		       count(pm.username) AS period_total
		  FROM seven_days a
		  LEFT JOIN (SELECT u.created_at, u.username
					  FROM tb_user u
					  LEFT JOIN tb_business b ON b.user_id = u.user_id
					  WHERE u.identity = 'business' AND b.state ="승인대기") AS pm ON DATE_FORMAT(pm.created_at, "%Y-%m-%d") = a.day
		 GROUP BY a.period
		 ORDER BY a.period;
	</select>
	
			
	<select id="requestBusinessChartData" resultType="com.tencoding.ADayOfLearning.dto.response.ChartResponseDto">
		WITH seven_days AS (
		    SELECT CURDATE() - INTERVAL days.num DAY AS day
		    FROM (SELECT 0 AS num UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) AS days
		)
		SELECT a.day AS period,
		       count(pm.username) AS period_total
		  FROM seven_days a
		  LEFT JOIN (SELECT u.created_at, u.username
					  FROM tb_user u
					  LEFT JOIN tb_business b ON b.user_id = u.user_id
					  WHERE u.identity = 'business' AND b.state ="등록완료") AS pm ON DATE_FORMAT(pm.created_at, "%Y-%m-%d") = a.day
		 GROUP BY a.period
		 ORDER BY a.period;
	</select>
</mapper>