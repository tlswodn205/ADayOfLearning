<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.ChatRepository"> 

	<insert id= "insert">
		INSERT INTO tb_chat(chat_room_id, user_id, context, view_at,created_at)
		values (#{chatRoomId},#{userId},#{context},#{viewAt},now());
	</insert>
	
	<update id="updateByChatId">
		UPDATE tb_chat SET context = #{context}, view_at = #{viewAt}
		 WHERE chat_id = #{chatId};
	</update>
	
	<delete id="deleteByChatId">
		DELETE
		  FROM tb_chat
		 WHERE chat_id = #{chatId};
	</delete>
	
	<select id="findByChatId" resultType = "com.tencoding.ADayOfLearning.repository.model.Chat">
		SELECT *
		  FROM tb_chat
		 WHERE chat_id = #{chatId};
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.Chat">
		SELECT *
		  FROM tb_chat;
	</select>
	
	<!-- 채팅방의 id로 대화내용 가져오기 -->
	<select id="findByChatRoomId" resultType = "com.tencoding.ADayOfLearning.dto.request.ChatMessageRequestDto">
		SELECT a.chat_room_id, a.user_id as send_user_id, b.username as send_username, a.context as message
		  FROM tb_chat a
		  LEFT JOIN tb_user b
		    ON a.user_id = b.user_id
		 WHERE a.chat_room_id = #{chatRoomId};
	</select>
	
	<!-- 채팅방 입장 여부 확인 -->
	<select id="findByChatRoomIdAndUserId" resultType = "com.tencoding.ADayOfLearning.repository.model.Chat">
		SELECT chat_room_id, user_id, context
		  FROM tb_chat
		 WHERE chat_room_id = #{chatRoomId}
		   AND user_id = #{userId}
		   AND context is null;
	</select>

</mapper>