<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.ReviewRepository"> 

	<insert id= "insert">
		INSERT INTO tb_review(lecture_id, user_id, score, content,created_at)
		values(#{lectureId},#{userId},#{score},#{content},now());
	</insert>
	
	<update id="updateByReviewId">
		UPDATE tb_review SET score = #{score}, content = #{content}
		WHERE review_id = #{reviewId};
	</update>
	
	<delete id="deleteByReviewId">
		DELETE FROM tb_review WHERE review_id = #{reviewId};
	</delete>
	
	<select id="findByReviewId" resultType = "com.tencoding.ADayOfLearning.repository.model.Review">
		SELECT * FROM tb_review WHERE review_id = #{reviewId};
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.Review">
		SELECT * FROM tb_review;
	</select>
	
	<!-- 리뷰 리스트 조회 -->
	<select id="findByLectureId" resultType = "com.tencoding.ADayOfLearning.dto.response.ReviewResponseDto">
		SELECT a.review_id, a.user_id, a.score, a.content
			 , date_format(a.created_at, '%y.%m.%d %H:%m:%s') AS created_at
		     , b.username
		  FROM tb_review AS a
		  LEFT JOIN tb_user AS b
			ON a.user_id = b.user_id
		 WHERE a.lecture_id = ${lectureId};
	</select>
	
	<!-- 리뷰 조회 -->
	<select id="findById" resultType = "com.tencoding.ADayOfLearning.dto.response.ReviewResponseDto">
		SELECT a.review_id, a.user_id, a.score, a.content
			 , date_format(a.created_at, '%y.%m.%d %H:%m:%s') AS created_at
		     , b.username
		  FROM tb_review AS a
		  LEFT JOIN tb_user AS b
			ON a.user_id = b.user_id
		 WHERE a.review_id = ${reviewId};
	</select>
	
	<!-- 리뷰 저장 -->
	<insert id="reviewInsert" useGeneratedKeys="true" keyProperty="reviewId">
		INSERT INTO tb_review(lecture_id, user_id, score, content)
		values(#{lectureId},#{userId},#{score},#{content});
	</insert>
	
</mapper>