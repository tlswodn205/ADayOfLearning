<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencoding.ADayOfLearning.repository.interfaces.LectureRepository"> 

	<insert id= "insert">
		INSERT INTO tb_lecture(category_id,user_id, title,content, address, address_detail, latitude, longitude, maximum, price, phone_number, state, created_at, duration)
		values(#{categoryId},#{userId},#{title},#{content},#{address},#{addressDetail},#{latitude},#{longitude},#{maximum},#{price},#{phoneNumber},#{state},now(),#{duration});

		<selectKey resultType="java.lang.Integer" keyProperty="lectureId" order="AFTER">
       		 SELECT LAST_INSERT_ID()
    	</selectKey>
		
	</insert>
	
	<update id="updateByLectureId">
		UPDATE tb_lecture SET title = #{title}, content = #{content},
		address = #{address}, address_detail = #{addressDetail},
		latitude = #{latitude}, longitude = #{longitude},
		maximum = #{maximum}, price = #{price},	phone_number = #{phoneNumber},
		state = #{state}, duration = #{duration}
		WHERE lecture_id = #{lectureId};
	</update>
	
	<delete id="deleteByLectureId">
		DELETE FROM tb_lecture WHERE lecture_id = #{lectureId};
	</delete>
	
	<select id="findByLectureId" resultType = "com.tencoding.ADayOfLearning.repository.model.Lecture">
		SELECT * FROM tb_lecture WHERE lecture_id = #{id}
	</select>
	
	<select id="findByAll" resultType = "com.tencoding.ADayOfLearning.repository.model.Lecture">
		SELECT * FROM tb_lecture;
	</select>
	
	<select id="findByStateAll" resultType = "com.tencoding.ADayOfLearning.dto.response.LectureListItemResponseDto">
		SELECT l.title, c.category_name, l.price, l.address, u.username, p.img
		FROM tb_lecture l 
		JOIN tb_category c ON l.category_id = c.category_id
		JOIN tb_user u ON l.user_id = u.user_id
        JOIN tb_lecture_photo p ON p.lecture_id = l.lecture_id
		WHERE l.state = 1 AND p.is_thumbnail = 1;
	</select>

	<select id="findBySearch" resultType = "com.tencoding.ADayOfLearning.dto.response.LectureListItemResponseDto">
		SELECT l.lecture_id, l.title, c.category_name, l.price, l.address, u.username, p.img
		FROM tb_lecture l 
		JOIN tb_category c ON l.category_id = c.category_id
		JOIN tb_user u ON l.user_id = u.user_i
		LEFT JOIN tb_lecture_photo p ON p.lecture_id= l.lecture_id 
        WHERE l.state = 1 AND p.is_thumbnail=1
        <if test="title != null">
			AND REPLACE(l.title, ' ', '') LIKE '%${title}%'
		</if>
		 <if test="categoryName != null">
			AND c.category_name = #{categoryName}
		</if>	
         <if test="minPrice != null">
			AND l.price >= #{minPrice}
		</if>	
         <if test="maxPrice != null">
			AND #{maxPrice} >= l.price
		</if>	
         <if test="location != null">
			AND address LIKE '${location}%'
			</if>	
			ORDER BY l.created_at DESC
			LIMIT #{startNum},12
	</select>

	<!-- index에서 사용할 List start-->
	<select id="findNewLecture" resultType = "com.tencoding.ADayOfLearning.dto.response.LectureListItemResponseDto">
		SELECT lecture_id, title, category_name, price, address, username, img
		  FROM ( SELECT l.lecture_id, l.title, c.category_name, l.price, l.address, u.username
					   , RANK() OVER (ORDER BY l.created_at DESC) AS order_number, p.img
					FROM tb_lecture l
					LEFT JOIN tb_category c ON l.category_id = c.category_id
					LEFT JOIN tb_user u ON l.user_id = u.user_id 
					LEFT JOIN tb_lecture_photo p ON p.lecture_id= l.lecture_id 
					WHERE p.is_thumbnail=1) AS a
		 WHERE order_number &lt;= 10;
	</select>
	<!-- index에서 사용할 List end-->
	
	<!-- 위도 경도 범위 내 조회 -->
	<select id="findByMapBounds" resultType = "com.tencoding.ADayOfLearning.dto.response.LectureListItemResponseDto">
		SELECT l.lecture_id, l.title, c.category_name, l.price, l.address, u.username
		  FROM tb_lecture l 
		  JOIN tb_category c
			ON l.category_id = c.category_id
		  JOIN tb_user u
			ON l.user_id = u.user_id
         WHERE l.state = 1
           AND (l.latitude &gt; #{qa} AND l.latitude &lt; #{pa} )
           AND (l.longitude &gt; #{ha} AND l.longitude &lt; #{oa} )
	</select>
	<!-- 마지막에 올라온 lecture 조회 -->
	<select id="findLastLecture" resultType = "com.tencoding.ADayOfLearning.dto.response.LastLectureResponseDto">
		SELECT lecture_id, latitude, longitude
		  FROM ( SELECT lecture_id, latitude, longitude
					  , RANK() OVER (ORDER BY lecture_id DESC) AS order_number
				   FROM tb_lecture 
				  WHERE state = 1 ) AS a
		 WHERE order_number = 1;
	</select>
	
	<select id="findAllCount" resultType = "java.lang.Integer">
		SELECT count(*)
		FROM tb_lecture l 
		JOIN tb_category c ON l.category_id = c.category_id
		JOIN tb_user u ON l.user_id = u.user_id
        WHERE l.state = 1
        
        <if test="title != null">
			AND REPLACE(l.title, ' ', '') LIKE '%${title}%'
		</if>
		 <if test="categoryName != null">
			AND c.category_name = #{categoryName}
		</if>	
         <if test="minPrice != null">
			AND l.price >= #{minPrice}
		</if>	
         <if test="maxPrice != null">
			AND #{maxPrice} >= l.price
		</if>	
         <if test="location != null">
			AND address LIKE '${location}%'
		</if>	

	</select>
</mapper>